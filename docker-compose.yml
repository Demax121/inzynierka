services:
  https_postgres_dyplom:
    container_name: https_postgres_dyplom
    build:
      context: ./postgreSQL
      dockerfile: postgresDB.Dockerfile
      args:
        DB_USER: ${DB_USER}
        DB_PASSWORD: ${DB_PASS}
        DB_NAME: ${DB_NAME}
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgreSQL/init.sql:/docker-entrypoint-initdb.d/init.sql:ro

  https_pgadmin_dyplom:
    container_name: https_pgadmin_dyplom
    build:
      context: ./postgreSQL
      dockerfile: pgAdmin.Dockerfile
      args:
        PGADMIN_EMAIL: ${PGADMIN_EMAIL}
        PGADMIN_PASSWORD: ${PGADMIN_PASSWORD}
    restart: unless-stopped
    depends_on:
      - https_postgres_dyplom
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  https_frontend_dyplom:
    container_name: https_frontend_dyplom
    build:
      context: ./frontend
      dockerfile: frontend.Dockerfile
      args:
        PORT_REFERENCE: ${PORT_REFERENCE}
        HOST_REFERENCE: ${HOST_REFERENCE}
    restart: unless-stopped
    depends_on:
      - https_backend_server_caddy_dyplom
    volumes:
      - ./frontend:/app
      - node_modules_cache:/app/node_modules
    environment:
      VITE_BACKEND_URL_PREFIX: ${VITE_BACKEND_URL_PREFIX}
      VITE_WS_URL_PREFIX: ${VITE_WS_URL_PREFIX}
      VITE_WLED_URL_PREFIX: ${VITE_WLED_URL_PREFIX}

  https_php_dyplom:
    container_name: https_php_dyplom
    build:
      context: ./backend
      dockerfile: php-manager.Dockerfile
      args:
        POSTGRES_USER: ${DB_USER}
        POSTGRES_PASSWORD: ${DB_PASS}
        POSTGRES_DB: ${DB_NAME}
    environment:
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      TUYA_CLIENT_ID: ${TUYA_CLIENT_ID}
      TUYA_CLIENT_SECRET: ${TUYA_CLIENT_SECRET}
      TUYA_DEVICE_ID: ${TUYA_DEVICE_ID}
      TUYA_API_ENDPOINT: ${TUYA_API_ENDPOINT}
    restart: unless-stopped
    depends_on:
      - https_postgres_dyplom
    volumes:
      - ./backend/php:/var/www/php

  https_backend_server_caddy_dyplom:
    container_name: https_backend_server_caddy_dyplom
    build:
      context: ./backend
      dockerfile: caddy-server.Dockerfile
    restart: unless-stopped
    depends_on:
      - https_php_dyplom
    volumes:
      - ./backend/php:/var/www/php

  https_bun_api_dyplom:
    container_name: https_bun_api_dyplom
    build:
      context: ./jsServer
      dockerfile: bun-api.Dockerfile
    restart: unless-stopped
    volumes:
      - ./jsServer:/app

  # Nginx Proxy Manager for HTTPS reverse proxy & SSL certificate management
  https_nginx_proxy_manager:
    image: jc21/nginx-proxy-manager:latest
    container_name: https_nginx_proxy_manager
    restart: unless-stopped
    ports:
      - '80:80'      # HTTP
      - '81:81'      # Admin UI
      - '443:443'    # HTTPS
    volumes:
      - ./nginx/data:/data
      - ./nginx/letsencrypt:/etc/letsencrypt
    depends_on:
      - https_backend_server_caddy_dyplom
      - https_frontend_dyplom

  caddy-simple-server:
    image: caddy:latest
    container_name: caddy-simple-server
    volumes:
      - ./website/dist:/usr/share/caddy
    command: caddy file-server --root /usr/share/caddy --listen :80


volumes:
  postgres_data: null
  pgadmin_data: null
  node_modules_cache: null

networks:
  default:
    external: true
    name: https_dyplom_network
