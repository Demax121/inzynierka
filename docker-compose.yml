services:
  offline_postgres_dyplom:
    container_name: offline_postgres_dyplom
    build:
      context: ./postgreSQL
      dockerfile: postgresDB.Dockerfile
      args:
        DB_USER: ${POSTGRES_USER}
        DB_PASSWORD: ${POSTGRES_PASSWORD}
        DB_NAME: ${POSTGRES_DB}
    restart: unless-stopped
    ports:
      - ${POSTGRES_PORT_EX}:${POSTGRES_PORT_NATIVE}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgreSQL/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - offline_dyplom_network
  offline_pgadmin_dyplom:
    container_name: offline_pgadmin_dyplom
    build:
      context: ./postgreSQL
      dockerfile: pgAdmin.Dockerfile
      args:
        PGADMIN_EMAIL: ${PGADMIN_EMAIL}
        PGADMIN_PASSWORD: ${PGADMIN_PASSWORD}
    restart: unless-stopped
    depends_on:
      - offline_postgres_dyplom
    ports:
      - ${PGADMIN_PORT_EX}:${PGADMIN_PORT_NATIVE}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - offline_dyplom_network
  offline_frontend_dyplom:
    container_name: offline_frontend_dyplom
    build:
      context: ./frontend
      dockerfile: frontend.Dockerfile
      args:
        PORT_REFERENCE: ${PORT_REFERENCE}
        HOST_REFERENCE: ${HOST_REFERENCE}
    restart: unless-stopped
    depends_on:
      - offline_backend_server_caddy_dyplom
    ports:
      - ${FRONTEND_PORT_EX}:${FRONTEND_PORT_NATIVE}
    volumes:
      - ./frontend:/app
      - node_modules_cache:/app/node_modules
    networks:
      - offline_dyplom_network
  offline_php_dyplom:
    container_name: offline_php_dyplom
    build:
      context: ./backend
      dockerfile: php-manager.Dockerfile
      args:
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_DB: ${POSTGRES_DB}
    restart: unless-stopped
    depends_on:
      - offline_postgres_dyplom
    volumes:
      - ./backend/php:/var/www/php
    networks:
      - offline_dyplom_network
  offline_backend_server_caddy_dyplom:
    container_name: offline_backend_server_caddy_dyplom
    build:
      context: ./backend
      dockerfile: caddy-server.Dockerfile
    restart: unless-stopped
    depends_on:
      - offline_php_dyplom
    ports:
      - ${BACKEND_CADDY_PORT_EX}:${BACKEND_CADDY_PORT_NATIVE}
    volumes:
      - ./backend/php:/var/www/php
    networks:
      - offline_dyplom_network
  offline_cdn_dyplom:
    container_name: offline_cdn_dyplom
    build:
      context: ./CDN
      dockerfile: caddy-cdn.Dockerfile
    restart: unless-stopped
    ports:
      - ${CDN_PORT_EX}:${CDN_PORT_NATIVE}
    volumes:
      - ./CDN/assets:/srv/assets:ro
    networks:
      - offline_dyplom_network
  offline_bun_api_dyplom:
    container_name: offline_bun_api_dyplom
    build:
      context: ./jsServer
      dockerfile: bun-api.Dockerfile
    restart: unless-stopped
    ports:
      - ${BUN_API_PORT_EX}:${BUN_API_PORT_NATIVE}
    volumes:
      - ./jsServer:/app
    networks:
      - offline_dyplom_network

volumes:
  postgres_data: null
  pgadmin_data: null
  node_modules_cache: null

networks:
  offline_dyplom_network:
    driver: bridge
