services:
  inzynierka_proxy_nginx:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: inzynierka_proxy_nginx
    restart: unless-stopped
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    volumes:
      - ./nginx/data:/data
      - ./nginx/letsencrypt:/etc/letsencrypt

  inzynierka_postgres_db:
    container_name: inzynierka_postgres_db
    build:
      context: ./postgreSQL
      dockerfile: postgresDB.Dockerfile
      args:
        DB_USER: ${POSTGRES_USER}
        DB_PASSWORD: ${POSTGRES_PASSWORD}
        DB_NAME: ${POSTGRES_DB}
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgreSQL/init.sql:/docker-entrypoint-initdb.d/init.sql

  inzynierka_pgadmin:
    container_name: inzynierka_pgadmin
    build:
      context: ./postgreSQL
      dockerfile: pgAdmin.Dockerfile
      args:
        PGADMIN_EMAIL: ${PGADMIN_EMAIL}
        PGADMIN_PASSWORD: ${PGADMIN_PASSWORD}
    restart: unless-stopped
    depends_on:
      - inzynierka_postgres_db
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  inzynierka_vite_frontend:
    container_name: inzynierka_vite_frontend
    build:
      context: ./frontend
      dockerfile: frontend.Dockerfile
      args:
        PORT_REFERENCE: ${PORT_REFERENCE}
        HOST_REFERENCE: ${HOST_REFERENCE}
    restart: unless-stopped
    depends_on:
      - inzynierka_caddy_cdn
      - inzynierka_proxy_nginx
    volumes:
      - ./frontend:/app
      - node_modules_cache:/app/node_modules

  inzynierka_php_manager:
    container_name: inzynierka_php_manager
    build:
      context: ./backend
      dockerfile: php-manager.Dockerfile
      args:
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_DB: ${POSTGRES_DB}
    restart: unless-stopped
    depends_on:
      - inzynierka_postgres_db
    volumes:
      - ./backend/php:/var/www/php

  inzynierka_backend_server:
    container_name: inzynierka_backend_server
    build:
      context: ./backend
      dockerfile: caddy-server.Dockerfile
    restart: unless-stopped
    depends_on:
      - inzynierka_php_manager
      - inzynierka_proxy_nginx
    volumes:
      - ./backend/php:/var/www/php

  inzynierka_caddy_cdn:
    container_name: inzynierka_caddy_cdn
    build:
      context: ./CDN
      dockerfile: caddy-cdn.Dockerfile
    restart: unless-stopped
    depends_on:
      - inzynierka_proxy_nginx
    volumes:
      - ./CDN/assets:/srv/assets:ro

  inzynierka_bun_websocket:
    container_name: inzynierka_bun_websocket
    build:
      context: ./jsServer
      dockerfile: bun-api.Dockerfile
    restart: unless-stopped
    depends_on:
      - inzynierka_proxy_nginx
    volumes:
      - ./jsServer:/app

volumes:
  postgres_data: null
  pgadmin_data: null
  node_modules_cache: null
