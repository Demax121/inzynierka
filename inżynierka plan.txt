Zabezpieczenia:

1. Po włączeniu urządzenie robi zapytanie GET do serwera
2. Serwer towrzy tymczasowy klucz szyfrujący i wysyła go do urządzenia
3. Urządzenie tworzy plik JSON zawierający klucz API/UID urządzenia oraz adres MAC urządzenia
4. JSON jest hashowany i następnie szyfrowany uzyskanym tymczasowym kluczem
5. Zaszyfrowany JSON jest wysyany do serwera
6. Serwer odszyfrowuje JSON tym samym kluczem i sprawdza dane z pliku czy znajdują się one w bazie danych
7. Jeśli dane znajdują się w bazie serwer odsyła hashowany? zaszyfrowany JSON z kluczem szyfrowania z bazy odpowiadający urządzeniu
8. Serwer usuwa tymczasowy klucz
9. urządzenie odszyfrowuje JSON i od tej pory wykorzystuje stały klucz szyfrujący do komunikacji z serwerem
10. Urządzenie usuwa/nadpisuje tymczasowy klucz 




LEPIEJ:

Każde ESP ma już wgrany klucz szyfrujący, szyfruje nim komunikację
Podczas komunikacji wysyłany jest payload:

{
  "identity": "klucz api",
  "channel": "door_sensor",
  "payload": {
    "doorOpen": false
  }
}


serwer pobiera z bazy danych zestaw kluczy api i kluczy szyfrujących
tworzy z nich tablicę, obiekt lub mapę (się ogarnie).

wykorzystuje klucz api aby znaleźć klucz szyfrujący
odszyfrowuje wiadomość

jeśli trzeba zaszefrować wiadomość to używa klucza api aby znaleźć klucz
szyfrujący dla danego urządzenia i następnie szyfruje i wysyła JSON


Dodać funckję check connection do frontendu że jak nie ma połączenia z urządzeniem
to karta przechodzi w loading state.

Dodać wysłanie ping do urządzeniu od razu po jego połączeniu

Przetłumaczyć wszystko na angielski, razem ze zmiennymi, ulepszyć readme, dodac pełną dokumentację
funkcje, szyfrowanie, wyjaśnienia funkcji, bibliotek etc.

Dodać dialog popup component, żeby pozbyć się alertów.

Poprawić w AC, ręczne włączanie, aby sprawdziłor różnicę reqTemp - currentTemp i wyświetlało dobrą funkcję